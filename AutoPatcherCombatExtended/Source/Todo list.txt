TODO finish MortarShell / window
TODO MortarShell select fragment defs and amounts
TODO fix mod suggest suggest window suggesting to remove mods that are already compatible because they loaded during SaveLoad
TODO bipod for ranged weapons
TODO window popup during Patch Export showing any patches that didn't export and why

TODO cache AmmoSetDef name, during patch find when it has changed and search for ranged weapons using it so they can be updated
TODO DefDataHolderRangedWeapon doesn't look for ammoset if set to not use ammo
TODO don't bother to save AmmoSet entries in defsToPatch
TODO combine suggest add and suggest remove mods windows into one


TODO Stuff patcher for modded materials - needed for armors that don't have armor values, but just apply a multiplier to the Stuff statBases
TODO verbs on apparel
TODO headgear layers
TODO ThingDef tags
TODO add logic to GetOriginalData to allow re-patching of already compatible defs
TODO in customization page, if user changes a weapon from burst 1 to multi, suggest to add recoil
TODO implement saving DataHolders to their own folder, in the RimWorld by Ludeon Studios folder
TODO search for "orphan" defs without an associated modContentPack, usually caused by adding defs via PatchOperation. Popup asking player if they want to assign these to an active mod.
TODO Property for returning modified mass and bulk that checks if a limiter is set

TODO export for vehicle stuff

DataHolder flow:
Load saved DataHolders
If DataHolder def field != null (would be null if mod source is not currently active) register the DataHolder in the dict
Generate DataHolders for selected mods, unless one already exists in dict
Run patches on all DataHolders in the dict






Swayfactor
=(IF('Weapon Data'!L2="Cannon",(('Length/1000)+'EmptyWeight)/370,IF('Weapon Data'!I2="Fixed",SQRT((('Weapon Data'!B2/100)+'Weapon Data'!F2)/27),IF('Weapon Data'!I2="OneHanded",(('Weapon Data'!B2/100)+'Weapon Data'!F2)/3,(('Weapon Data'!B2/100)+'Weapon Data'!F2)/10))) + MIN('Weapon Data'!K2 / 100,0.12)) * IF('Weapon Data'!I2="Bipod",0.7,1) * IF('Weapon Data'!I2="HipFired",1.15,1)
 

RecoilAmount
 
=IF(M6, MAX(SQRT((((BulletMass/500)*'MuzzleVelocity)/EmptyWeight)